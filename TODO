High Priority:
CLIENT: Put functions, types, structs definitions into external XML file
CLIENT: Load and parse definition file
CLIENT: Convert XML file to binary version, load and just use the binary version as if it came over network
SERVER: Up and running ready for client to connect
CLIENT: Connect to server
SERVER: Load and parse definition file
SERVER: Convert XML file to binary version, and send to client over network
CLIENT: use binary version from over the network
CLIENT: send function data to server as network message
SERVER: process function data send response
CLIENT: support for async function calls, error queue, potential threading issues
SERVER: support for async function calls, error queue

Medium Priority:
FUNCTION: error handling run out of memory when adding new function or new type e.g. array limit reached

CORE: error handling run out of memory when adding new string e.g. array limit reached

LES: need good debugging ability for the packets before sent and at server end
LES: send packet data to server?

Low Priority:
MACROS: WORK OUT HOW TO DO THE RETURN VALUE IN MACROS
MACROS: WORK OUT HOW TO DO THE ERROR HANDLING 

FUNCTION: how will output parameters work? Do they need to be sent to the server (yes i.e. in/out params)

CORE: memory management for input & output parameter blocks per function
CORE: hash table with binary search

LES: need to list the data storage that is required by the global data
LES: server send global test data instead of building it internally?
LES: might want to save ptr values for later instead of taking the value from them?????????????

FEATURE: make pod types alias to byte[sizeOfDataType], so byte is the final base pure type, waste of CPU cycles
