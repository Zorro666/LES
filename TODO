High Priority:
PYTHON: check the python output from the tests - should be same output as C++ version
FATAL_ERROR: 'LES_Test_FunctionNotFound' : Error during LES_FunctionStart
FATAL_ERROR: 'LES_Test_ReturnTypeNotFound' : Error during LES_FunctionStart
FATAL_ERROR: 'LES_Test_ReturnTypeHashIsWrong' : Error during LES_FunctionStart
FATAL_ERROR: 'LES_Test_ReturnTypeStringIsWrong' : Error during LES_FunctionStart
FATAL_ERROR: 'LES_Test_TooManyInputParameters' : Error adding Input parameter 2 'input_2' type:'int'
FATAL_ERROR: 'LES_Test_InputWrongIndex' : Error adding Input parameter 0 'input_1' type:'int'
FATAL_ERROR: 'LES_Test_InputGlobalIndexIsWrong' : Error adding Input parameter 0 'input_0' type:'int'
FATAL_ERROR: 'LES_Test_InputUsedAsOutput' : Error adding Output parameter 0 'input_0' type:'int'
FATAL_ERROR: 'LES_Test_InputParamAlreadyUsed' : Error adding Input parameter 1 'input_0' type:'int'
FATAL_ERROR: 'LES_Test_InputParamMissing' : Error during LES_FunctionEnd
FATAL_ERROR: 'LES_Test_InputNameDoesntExist' : Error adding Input parameter 0 'inputNotExist' type:'int'
FATAL_ERROR: 'LES_Test_InputNameIDNotFound' : Error adding Input parameter 0 'input_0' type:'int'
FATAL_ERROR: 'LES_Test_InputNameHashIsWrong' : Error adding Input parameter 0 'input_0' type:'int'
FATAL_ERROR: 'LES_Test_InputNameStringIsWrong' : Error adding Input parameter 0 'InputNameBrokenString' type:'int'
FATAL_ERROR: 'LES_Test_InputTypeIDNotFound' : Error adding Input parameter 0 'input_0' type:'int'
FATAL_ERROR: 'LES_Test_InputTypeHashIsWrong' : Error adding Input parameter 0 'input_0' type:'int'
FATAL_ERROR: 'LES_Test_InputTypeStringIsWrong' : Error adding Input parameter 0 'input_0' type:'input_brokenString'
FATAL_ERROR: 'LES_Test_TooManyOutputParameters' : Error adding Output parameter 2 'output_2' type:'unsigned char*'
FATAL_ERROR: 'LES_Test_OutputWrongIndex' : Error adding Output parameter 1 'output_1' type:'int'
FATAL_ERROR: 'LES_Test_OutputGlobalIndexIsWrong' : Error adding Output parameter 0 'output_0' type:'int'
FATAL_ERROR: 'LES_Test_OutputUsedAsInput' : Error adding Input parameter 0 'output_0' type:'int'
FATAL_ERROR: 'LES_Test_OutputParamAlreadyUsed' : Error adding Output parameter 1 'output_0' type:'unsigned int*'
FATAL_ERROR: 'LES_Test_OutputParamMissing' : Error during LES_FunctionEnd
FATAL_ERROR: 'LES_Test_OutputNameDoesntExist' : Error adding Output parameter 0 'outputNotExist' type:'int'
FATAL_ERROR: 'LES_Test_OutputNameIDNotFound' : Error adding Output parameter 0 'output_0' type:'int*'
FATAL_ERROR: 'LES_Test_OutputNameHashIsWrong' : Error adding Output parameter 0 'output_0' type:'int'
FATAL_ERROR: 'LES_Test_OutputNameStringIsWrong' : Error adding Output parameter 0 'OutputNameBrokenString' type:'int*'
FATAL_ERROR: 'LES_Test_OutputTypeIDNotFound' : Error adding Output parameter 0 'output_0' type:'int'
FATAL_ERROR: 'LES_Test_OutputTypeHashIsWrong' : Error adding Output parameter 0 'output_0' type:'int'
FATAL_ERROR: 'LES_Test_OutputTypeStringIsWrong' : Error adding Output parameter 0 'output_0' type:'output_brokenString'
FATAL_ERROR: TEST function 'LES_Test_InputParameterAlreadyExists' : ERROR cannot create definition
FATAL_ERROR: TEST function 'LES_Test_OutputParameterAlreadyExists' : ERROR cannot create definition
FATAL_ERROR: TEST function 'LES_Test_ParameterAlreadyExists' : ERROR cannot create definition
LES_Test_InputOutputMixture: success if no error output
FATAL_ERROR: 'LES_Test_InputParamUsedAsOutput' : Error adding Output parameter 0 'output_0' type:'unsigned short'
FATAL_ERROR: 'LES_Test_OutputParamUsedAsInput' : Error adding Input parameter 0 'input_0' type:'output_only'
FATAL_ERROR: TEST AddType 'unsigned char' NumElements:0 0x6E40A25D Alias 'unsigned char' failed
FATAL_ERROR: TEST AddType 'unsigned char' NumElements:0 0x6E40A25D Alias 'unsigned char' failed
FATAL_ERROR: TEST AddType 'unsigned char*' NumElements:0 0xABB572C1 Alias 'unsigned int' failed
LES_Test_ReadInputParameters: input_0:102 value_0:102
LES_Test_ReadInputParameters: input_1:23453 value_1:23453
LES_Test_ReadInputParameters: input_2:110 value_2:110
LES_Test_ReadInputParameters: input_3:-4.033200 value_3:-4.033200
LES_Test_ReadInputParameters: input_4:12345 value_4:12345
LES_Test_ReadOutputParameters: output_0:1 value_0:1
LES_Test_ReadOutputParameters: output_1:2 value_1:2
LES_Test_ReadOutputParameters: output_2:79 value_2:79
LES_Test_ReadOutputParameters: output_3:-123.456001 value_3:-123.456001
LES_Test_ReadInputOutputParameters: input_0:102 value_0:102
LES_Test_ReadInputOutputParameters: output_0:1 value_0:1
LES_Test_ReadInputOutputParameters: input_1:23453 value_1:23453
LES_Test_ReadInputOutputParameters: output_1:2 value_1:2
LES_Test_ReadInputOutputParameters: input_2:'*' value_2:'*'
LES_Test_ReadInputOutputParameters: output_2:'O' value_2:'O'
LES_Test_ReadInputOutputParameters: input_3:-4.033200 value_3:-4.033200
LES_Test_ReadInputOutputParameters: output_3:-123.456001 value_3:-123.456001
LES_Test_ReadInputOutputParameters: input_4:12345 value_4:12345
LES_Test_ReadInputOutputParameters: parameterDataSize:26
FATAL_ERROR: TEST struct 'LES_Struct_TooManyMembers' : ERROR cannot create definition
FATAL_ERROR: TEST struct 'LES_Struct_MemberAlreadyExists' : ERROR cannot create definition
FATAL_ERROR: TEST struct 'LES_Struct_NotEnoughMembers' : ERROR cannot create definition
FATAL_ERROR: TEST AddType 'arrayNotAliasedToNonPtr[4]' NumElements:4 0xFEF71683 Alias 'int*' failed
FATAL_ERROR: TEST AddType 'arrayNotAliasedToNonReference[4]' NumElements:4 0x20C82642 Alias 'int&' failed
FATAL_ERROR: TEST AddType 'arrayNotAliased[5]' NumElements:4 0x521D60A Alias 'arrayNotAliased[5]' failed
FATAL_ERROR: TEST AddType 'arrayExistsWrongNumberOfElements[1]' NumElements:2 0x5429AC10 Alias 'int' failed
FATAL_ERROR: TEST AddType 'arrayCantFindAlias[1]' NumElements:1 0xED709A25 Alias 'jake*' failed
FATAL_ERROR: TEST AddType 'arrayInvalidNumElements[1]' NumElements:0 0x859E7150 Alias 'int*' failed

CLIENT: change to/from BigEndian functions to take an output ptr & input ptr, to save double memcpys
CLIENT: missing final RPC function send message (it doesn't get sent by network thread)

Medium Priority:
CLIENT: support for async function calls, error queue, potential threading issues
SERVER: support for async function calls, error queue

LES_TYPEDATA.PY: in the future have a global parameters block e.g. pointer data size default
LES_STRUCTDATA.PY: struct creation have global for packing amount in the XML

LES: need good debugging ability for the packets before sent and at server end
LES: send packet data to server?

Low Priority:
MUTEX: put thread ID into it, then lock on same thread is ignored?
CLIENT: input thread needs mutex before adding network items, network items should only be added on main thread
CLIENT: rand() need a random function
MACROS: WORK OUT HOW TO DO THE RETURN VALUE IN MACROS
MACROS: WORK OUT HOW TO DO THE ERROR HANDLING 

FUNCTION: how will output parameters work? Do they need to be sent to the server (yes i.e. in/out parameters)

CORE: memory management for input & output parameter blocks per function
CORE: hash table with binary search

LES: need to list the data storage that is required by the global data
LES: might want to save pointer values for later instead of taking the value from them?????????????
